#include <M5Stack.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

const char* ssid = "SSID";
const char* password = "SSID Password";

void setup() {
  M5.begin();
  M5.Lcd.setTextColor(TFT_GREEN);
  M5.Lcd.setTextSize(2);
  M5.Lcd.fillScreen(TFT_BLACK);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
}

String getBitcoinPrice() {
  HTTPClient http;
  http.begin("https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd");
  int httpCode = http.GET();

  if (httpCode == HTTP_CODE_OK) {
    String payload = http.getString();
    DynamicJsonDocument doc(1024);
    deserializeJson(doc, payload);
    JsonObject bitcoin = doc["bitcoin"];
    double price = bitcoin["usd"];
    http.end();
    return String(price, 2);
  } else {
    http.end();
    return "N/A";
  }
}

String getEthereumPrice() {
  HTTPClient http;
  http.begin("https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd");
  int httpCode = http.GET();

  if (httpCode == HTTP_CODE_OK) {
    String payload = http.getString();
    DynamicJsonDocument doc(1024);
    deserializeJson(doc, payload);
    JsonObject ethereum = doc["ethereum"];
    double price = ethereum["usd"];
    http.end();
    return String(price, 2);
  } else {
    http.end();
    return "N/A";
  }
}

void updatePriceLabels() {
  String bitcoinPrice = getBitcoinPrice();
  String ethereumPrice = getEthereumPrice();
  M5.Lcd.fillScreen(TFT_BLACK);
  M5.Lcd.setCursor(10, 60);
  M5.Lcd.print("Bitcoin:");
  M5.Lcd.setCursor(10, 90);
  M5.Lcd.print(bitcoinPrice + " USD");
  M5.Lcd.setCursor(10, 150);
  M5.Lcd.print("Ethereum:");
  M5.Lcd.setCursor(10, 180);
  M5.Lcd.print(ethereumPrice + " USD");
}

void loop() {
  updatePriceLabels();
  delay(10000);
}
